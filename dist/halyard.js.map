{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a71e952c933a93e67454","webpack:///./src/halyard.js","webpack:///./src/table.js","webpack:///./src/default-connection-matcher.js","webpack:///./src/connections.js","webpack:///./src/connections/file.js","webpack:///./src/connections/connection-base.js","webpack:///./src/utils/utils.js","webpack:///./src/connections/web-file.js","webpack:///./src/connections/inline-data.js","webpack:///./src/utils/json-to-csv.js","webpack:///./src/connection-matcher.js","webpack:///./src/utils/format-specification.js","webpack:///./src/hyper-cube.js","webpack:///./src/utils/hyper-cube-utils.js","webpack:///./src/utils/hyper-cube-specification.js","webpack:///./src/set-statement.js","webpack:///./src/calendar-derived-fields.js","webpack:///./src/derived-fields-template.js"],"names":["Utils","SCRIPT_BLOCK_SPACING","Halyard","defaultSetStatements","items","addItem","lastItems","getFields","x","filter","item","getConnection","map","getConnections","connection","getQixConnectionObject","matcherFn","fields","forEach","push","preservePreviouslyEnteredValues","that","Object","keys","key","itemScript","getScript","getName","section","escapeText","concat","getAllScriptBlocks","getItemScript","join","arg1","options","newHyperCube","i","length","checkIfItemNameExists","newTable","newItem","Error","charPosition","allScriptBlocks","scriptBlockStartPosition","scriptBlockEndPosition","undefined","Table","HyperCube","Connections","module","exports","findMatch","name","prefix","field","formattedInput","src","type","format","toUpperCase","inputFormat","displayFormat","expr","JSON","stringify","isProceedingLoad","getPrefix","getFieldList","getFileExtension","fileExtension","JsonToCsv","connectionMatcher","addConnection","data","match","Web","File","Array","isJson","Inline","convert","FileConnection","path","folderPath","fileName","ConnectionBase","connectionType","qName","qConnectionString","qType","getConnectionType","getLibStatement","uniqueName","validFieldType","indentation","getFieldName","folderPathMatch","fileNameMatch","fileExtensionMatch","text","replace","c","r","Math","random","v","toString","validFieldTypes","indexOf","toLowerCase","WebFileConnection","url","InlineData","escapeValueContainingDelimiter","delimiter","csv","headers","header","j","slice","ConnectionLookup","connectionsRegistry","matchingFn","formatSpecification","supportedCharacterSet","characterSet","validCharacterSets","Number","formatSpecificationArr","fileFormat","headerRowNr","srcTable","noLabels","formatSpecificationString","HyperCubeUtils","hyperCubeLayout","validateHyperCubeLayout","parseHyperCubeLayout","qDimensionInfo","qMeasureInfo","qMode","validateDataPages","qDataPages","validateDataPagesCoverage","dataPages","qArea","qTop","qHeight","dataPage","validateQMatrix","validateQArea","qSize","qcy","qMatrix","qLeft","qWidth","qcx","getFieldsFromHyperCubeLayout","getDataFromHyperCubeLayout","inlineData","hasDual","isDual","getMapTableForDualField","getFieldsDefinition","mappedField","dimensionType","uniqueFilter","value","index","self","getDualDataRow","row","concatQMatrix","reduce","prev","curr","mapDualFieldQMatrix","getDualHeadersForField","cell","isCellDual","getCellValue","getDimensionType","qFallbackTitle","qNumFormat","qFmt","checkIfFieldIsDual","DEFAULT_DELIMITER","isDimensionTypeMixed","dimension","qDimensionType","numeric","qTags","isDimensionTypeText","isDimensionTypeTimestamp","timestamp","qTypes","isDimensionTypeDate","date","isDimensionTypeTime","time","isDimensionTypeInterval","interval","isNumericDimensionType","numericDimensionTypes","storeNumeric","qText","qNum","escapeStringContainingDelimiter","string","getNumericCellValue","getTextCellValue","SetStatement","isArray","derivedFieldsDefinition","getCalenderDerivedFieldDefinition","fn","fieldTag","derivedFieldDefinition","fieldMatchFunction","f","calendarTemplate","DerivedFieldsTemplate","getFieldFn","getDefinition","fieldNames"],"mappings":"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","file":"halyard.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"halyard\"] = factory();\n\telse\n\t\troot[\"halyard\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a71e952c933a93e67454","import Table from './table';\nimport HyperCube from './hyper-cube';\nimport Connections from './connections';\nimport SetStatement from './set-statement';\n\nimport * as Utils from './utils/utils';\nimport getDerivedFieldDefinition from './calendar-derived-fields';\n\nconst SCRIPT_BLOCK_SPACING = '\\n\\n';\n\nclass Halyard {\n  constructor() {\n    this.defaultSetStatements = {};\n    this.items = [];\n    this.addItem(new SetStatement(this.defaultSetStatements));\n    this.lastItems = [getDerivedFieldDefinition(x => this.getFields(x))];\n  }\n\n  getConnections() {\n    return this.items.filter(item => item.getConnection).map(item => item.getConnection());\n  }\n\n  getQixConnections() {\n    return this.getConnections().map(connection => connection.getQixConnectionObject())\n      .filter(connection => connection);\n  }\n\n  getFields(matcherFn) {\n    matcherFn = matcherFn || (() => true);\n\n    const fields = [];\n\n    this.items.forEach((item) => {\n      if (item.getFields && item.getFields()) {\n        fields.push(...item.getFields().filter(matcherFn));\n      }\n    });\n\n    return fields;\n  }\n\n  setDefaultSetStatements(defaultSetStatements, preservePreviouslyEnteredValues) {\n    const that = this;\n\n    Object.keys(defaultSetStatements).forEach((key) => {\n      if (!(preservePreviouslyEnteredValues && that.defaultSetStatements[key])) {\n        that.defaultSetStatements[key] = defaultSetStatements[key];\n      }\n    });\n  }\n\n  getItemScript(item) {\n    let itemScript = item.getScript();\n\n    if (item.getName && item.getName()) {\n      if (item.section) {\n        itemScript = `///$tab ${Utils.escapeText(item.section)}\\n\"${Utils.escapeText(item.getName())}\":\\n${itemScript}`;\n      } else {\n        itemScript = `\"${Utils.escapeText(item.getName())}\":\\n${itemScript}`;\n      }\n    }\n\n    return itemScript;\n  }\n\n  getAllScriptBlocks() {\n    return this.items.concat(this.lastItems).filter(item => item.getScript());\n  }\n\n  getScript() {\n    return this.getAllScriptBlocks().map(item => this.getItemScript(item))\n        .join(SCRIPT_BLOCK_SPACING);\n  }\n\n  // Support to add hyper cube explicit or implicitly\n  addHyperCube(arg1, options) {\n    let newHyperCube;\n\n    if (arg1 instanceof HyperCube) {\n      newHyperCube = arg1;\n    } else {\n      newHyperCube = new HyperCube(arg1, options);\n    }\n\n    for (let i = 0; i < newHyperCube.items.length; i += 1) {\n      this.checkIfItemNameExists(newHyperCube.items[i]);\n    }\n\n    for (let i = 0; i < newHyperCube.items.length; i += 1) {\n      this.addItem(newHyperCube.items[i]);\n    }\n\n    return newHyperCube;\n  }\n\n  // Support to add table explicit or implicitly\n  addTable(arg1, options) {\n    let newTable;\n\n    if (arg1 instanceof Table) {\n      newTable = arg1;\n    } else {\n      newTable = new Table(arg1, options);\n    }\n\n    return this.addItem(newTable);\n  }\n  checkIfItemNameExists(newItem) {\n    if (newItem.getName && newItem.getName()) {\n      if (this.items.filter(item => item.getName() === newItem.getName()).length > 0) {\n        throw new Error('Cannot add another table with the same name.');\n      }\n    }\n  }\n  addItem(newItem) {\n    this.checkIfItemNameExists(newItem);\n\n    this.items.push(newItem);\n\n    return newItem;\n  }\n\n  getItemThatGeneratedScriptAt(charPosition) {\n    const allScriptBlocks = this.getAllScriptBlocks();\n    let scriptBlockStartPosition = 0;\n\n    for (let i = 0; i < allScriptBlocks.length; i += 1) {\n      const itemScript = this.getItemScript(allScriptBlocks[i]);\n      const scriptBlockEndPosition = scriptBlockStartPosition +\n          (`${itemScript}${SCRIPT_BLOCK_SPACING}`).length;\n\n      if (scriptBlockStartPosition <= charPosition && charPosition <= scriptBlockEndPosition) {\n        return allScriptBlocks[i];\n      }\n\n      scriptBlockStartPosition = scriptBlockEndPosition;\n    }\n\n    return undefined;\n  }\n}\n\nHalyard.Table = Table;\n\nHalyard.HyperCube = HyperCube;\n\nHalyard.Connections = Connections;\n\nexport default Halyard;\n\nmodule.exports = Halyard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/halyard.js","import defaultConnectionMatcher from './default-connection-matcher';\nimport formatSpecification from './utils/format-specification';\nimport { escapeText, validFieldType, indentation } from './utils/utils';\n\nclass Table {\n  constructor(connection, options) {\n    this.connection = defaultConnectionMatcher.findMatch(connection);\n\n    options = options || {};\n\n    if (typeof options === 'string') {\n      this.name = options;\n      options = {};\n    } else {\n      this.name = options.name;\n      this.fields = options.fields;\n      this.prefix = options.prefix;\n      if (options.section) {\n        this.section = options.section;\n      }\n    }\n\n    this.options = options;\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  getFieldList() {\n    if (this.fields) {\n      return this.fields.map((field) => {\n        let formattedInput = `\"${escapeText(field.src || '')}\"`;\n\n        if (validFieldType(field.type)) {\n          const format = field.type.toUpperCase();\n\n          if (field.inputFormat) {\n            formattedInput = `${format}#(${formattedInput}, '${field.inputFormat}')`;\n          }\n\n          if (field.displayFormat) {\n            formattedInput = `${format}(${formattedInput}, '${field.displayFormat}')`;\n          } else {\n            formattedInput = `${format}(${formattedInput})`;\n          }\n        }\n\n        if (field.expr) {\n          formattedInput = field.expr;\n        }\n\n\n        if (!(field.name || field.src)) {\n          throw (new Error(`A name or src needs to specified on the field: ${JSON.stringify(field)}`));\n        }\n\n        return `${indentation() + formattedInput} AS \"${escapeText(field.name || field.src)}\"`;\n      }).join(',\\n');\n    }\n\n    return '*';\n  }\n\n  isProceedingLoad() {\n    return this.connection instanceof Table;\n  }\n\n  getPrefix() {\n    if (this.prefix) {\n      return `${this.prefix}\\n`;\n    }\n    return '';\n  }\n\n  getScript() {\n    // In the future this could be moved into a connectionMatcher\n    // but for sake of clarity it is kept inline.\n    if (this.isProceedingLoad()) {\n      return `${this.getPrefix()}LOAD\\n${this.getFieldList()};\\n${this.connection.getScript()}`;\n    }\n\n    // Hack!\n    if (this.connection.getFileExtension) {\n      this.options.fileExtension = this.connection.getFileExtension();\n    }\n\n    return `${this.getPrefix()}LOAD\\n${this.getFieldList()}\\n${this.connection.getScript()}${formatSpecification(this.options)};`;\n  }\n\n  getName() {\n    return this.name || '';\n  }\n\n  getSection() {\n    return this.section;\n  }\n\n  getConnection() {\n    return this.connection;\n  }\n}\n\nexport default Table;\n\n\n\n// WEBPACK FOOTER //\n// ./src/table.js","import Connections from './connections';\n\nimport * as JsonToCsv from './utils/json-to-csv';\n\nimport ConnectionMatcher from './connection-matcher';\n\nconst connectionMatcher = new ConnectionMatcher();\n\n\n// url to a table file\nconnectionMatcher.addConnection(data => typeof data === 'string' && data.match(/^https?:\\/\\/(.*)$/g), data => new Connections.Web(data));\n\n// Path to a table file\nconnectionMatcher.addConnection(data => typeof data === 'string' && data.match(/^.*\\.(.*)$/g), data => new Connections.File(data));\n\n// Inline JSON table to csv\nconnectionMatcher.addConnection(data => data instanceof Array && JsonToCsv.isJson(data),\n    data => new Connections.Inline(JsonToCsv.convert(data)));\n\n// Inline csv table\nconnectionMatcher.addConnection(data => typeof data === 'string', data => new Connections.Inline(data));\n\nexport default connectionMatcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/default-connection-matcher.js","import FileConnection from './connections/file';\nimport WebConnection from './connections/web-file';\nimport InlineData from './connections/inline-data';\n\nexport default {\n  File: FileConnection,\n  Web: WebConnection,\n  Inline: InlineData,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/connections.js","import ConnectionBase from './connection-base';\nimport * as Utils from '../utils/utils';\n\nclass FileConnection extends ConnectionBase {\n  constructor(path) {\n    super(Utils.folderPath(path), 'folder');\n\n    this.fileName = Utils.fileName(path);\n\n    this.fileExtension = Utils.fileExtension(path) || 'txt';\n  }\n\n  getLibStatement() {\n    return `${super.getLibStatement()}/${this.fileName}`;\n  }\n}\n\nexport default FileConnection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connections/file.js","import { uniqueName } from '../utils/utils';\n\nclass ConnectionBase {\n  constructor(path, connectionType) {\n    this.path = path;\n    this.connectionType = connectionType;\n    this.fileExtension = '';\n  }\n\n  getFileExtension() {\n    return this.fileExtension;\n  }\n\n  getConnectionType() {\n    return this.connectionType;\n  }\n\n  getQixConnectionObject() {\n    return {\n      qName: this.getName(),\n      qConnectionString: this.path,\n      qType: this.getConnectionType(),\n    };\n  }\n\n  getName() {\n    if (!this.name) {\n      this.name = uniqueName();\n    }\n\n    return this.name;\n  }\n\n  getLibStatement() {\n    return `lib://${this.getName()}`;\n  }\n\n  getScript() {\n    return `FROM [${this.getLibStatement()}]`;\n  }\n}\n\nexport default ConnectionBase;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connections/connection-base.js","export function folderPath(path) {\n  let folderPathMatch = path.match(/^(.*)(\\\\.*\\..*$|\\\\.*)$/);\n\n  if (folderPathMatch) {\n    return folderPathMatch[1];\n  }\n\n  // Unix file path check\n  folderPathMatch = path.match(/^(.*)(\\/.*\\..*$|\\/.*)$/);\n\n  return folderPathMatch && folderPathMatch[1];\n}\n\nexport function fileName(path) {\n  let fileNameMatch = path.match(/^.*\\\\(.*\\..*|.*)$/);\n\n  if (fileNameMatch) {\n    return fileNameMatch[1];\n  }\n\n  fileNameMatch = path.match(/^.*\\/(.*\\..*|.*)$/);\n\n  return fileNameMatch && fileNameMatch[1];\n}\n\nexport function fileExtension(path) {\n  const fileExtensionMatch = path.match(/^.*\\.(.*)$/);\n\n  return fileExtensionMatch && fileExtensionMatch[1];\n}\n\nexport function escapeText(text) {\n  return text.replace(/\"/g, '\"\"');\n}\n\nexport function uniqueName() {\n  /* eslint no-bitwise: [\"off\"] */\n  /* eslint no-mixed-operators: [\"off\"] */\n\n  return 'xxxxx-8xxxx-yxxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport function validFieldType(type) {\n  const validFieldTypes = ['time', 'timestamp', 'date', 'interval'];\n\n  type = type || '';\n\n  return validFieldTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport function indentation() {\n  return '  ';\n}\n\nexport function getFieldName(field) {\n  return field.name || field.src;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","import ConnectionBase from './connection-base';\n\nclass WebFileConnection extends ConnectionBase {\n  constructor(url, fileExtension) {\n    super(url, 'internet');\n\n    const fileExtensionMatch = url.match(/^https?:\\/\\/.*\\/.*\\.(\\w*)\\?.*$/) ||\n      url.match(/^https?:\\/\\/.*\\/.*\\.(\\w*)$/);\n\n    this.fileExtension = fileExtension || (fileExtensionMatch && fileExtensionMatch[1]) || 'html';\n  }\n}\nexport default WebFileConnection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connections/web-file.js","import ConnectionBase from './connection-base';\nimport * as Utils from '../utils/utils';\n\nclass InlineData extends ConnectionBase {\n  constructor(data) {\n    super();\n\n    this.data = data;\n\n    this.fileExtension = 'txt';\n  }\n\n  getScript() {\n    return `INLINE \"\\n${Utils.escapeText(this.data)}\\n\"`;\n  }\n\n  getLibStatement() {\n  }\n\n  getQixConnectionObject() {\n  }\n}\n\nexport default InlineData;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connections/inline-data.js","function escapeValueContainingDelimiter(data, delimiter) {\n  if (data && typeof data === 'string' && (data.indexOf(delimiter) > -1 || data.indexOf('\\n') > -1)) {\n    return `\"${data.replace(/\"/g, '\"\"').replace(/\\n/g, ' ')}\"`;\n  }\n\n  return data;\n}\n\nexport function convert(data) {\n  if (data instanceof Array === false) {\n    data = [data];\n  }\n\n  let csv = '';\n  const delimiter = ',';\n\n  const headers = Object.keys(data[0]);\n\n  csv = `${csv + headers.map(header => escapeValueContainingDelimiter(header, delimiter))\n          .join(delimiter)}\\n`;\n\n  let fields = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    fields = [];\n\n    for (let j = 0; j < headers.length; j += 1) {\n      fields.push(escapeValueContainingDelimiter(data[i][headers[j]], delimiter));\n    }\n\n    csv = `${csv + fields.join(delimiter)}\\n`;\n  }\n\n  csv = csv.slice(0, -('\\n'.length));\n\n  return csv;\n}\n\nexport function isJson(data) {\n  if (data instanceof Array) {\n    if (data[0] && typeof data[0] === 'object') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/json-to-csv.js","class ConnectionLookup {\n  constructor() {\n    this.connectionsRegistry = [];\n  }\n\n  addConnection(matchingFn, connection) {\n    this.connectionsRegistry.push({\n      matchingFn,\n      connection,\n    });\n  }\n\n  findMatch(data) {\n    for (let i = 0; i < this.connectionsRegistry.length; i += 1) {\n      if (this.connectionsRegistry[i].matchingFn(data)) {\n        return this.connectionsRegistry[i].connection(data);\n      }\n    }\n\n    return data;\n  }\n}\n\nexport default ConnectionLookup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/connection-matcher.js","import { escapeText } from '../../src/utils/utils';\n\nfunction supportedCharacterSet(characterSet) {\n  const validCharacterSets = ['utf8', 'unicode', 'ansi', 'oem', 'mac'];\n\n  return (validCharacterSets.indexOf(characterSet) > -1 && characterSet) || (Number(characterSet).toString() !== 'NaN' && `codepage is ${characterSet}`);\n}\n\nexport default function formatSpecification(options) {\n  if (!options) {\n    options = {};\n  }\n\n  const formatSpecificationArr = [];\n\n  if (options.fileExtension) {\n    let fileFormat = options.fileExtension;\n\n    if (fileFormat === 'xlsx') {\n      fileFormat = 'ooxml';\n    }\n\n    if (fileFormat === 'csv') {\n      fileFormat = 'txt';\n    }\n\n    if (fileFormat === 'htm') {\n      fileFormat = 'html';\n    }\n\n    formatSpecificationArr.push(fileFormat);\n  }\n\n  if (options.headerRowNr || options.headerRowNr === 0) {\n    formatSpecificationArr.push(`header is ${options.headerRowNr} lines`);\n    // Should be included if header row is specified!\n    formatSpecificationArr.push('embedded labels');\n  }\n\n  if (options.delimiter) {\n    formatSpecificationArr.push(`delimiter is '${options.delimiter}'`);\n  }\n\n  if (options.characterSet && supportedCharacterSet(options.characterSet)) {\n    formatSpecificationArr.push(supportedCharacterSet(options.characterSet));\n  }\n\n  if (options.srcTable) {\n    formatSpecificationArr.push(`table is \"${escapeText(options.srcTable)}\"`);\n  }\n\n  if (options.noLabels) {\n    formatSpecificationArr.push('no labels');\n  }\n\n  let formatSpecificationString = '';\n\n  if (formatSpecificationArr.length > 0) {\n    formatSpecificationString = `\\n(${formatSpecificationArr.join(', ')})`;\n  }\n\n  return formatSpecificationString;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/format-specification.js","import Table from './table';\nimport { validFieldType } from './utils/utils';\nimport * as HyperCubeUtils from './utils/hyper-cube-utils';\n\nclass HyperCube {\n  constructor(hyperCubeLayout, options) {\n    this.items = [];\n    this.fields = [];\n    this.hyperCubeLayout = this.validateHyperCubeLayout(hyperCubeLayout);\n\n    options = options || {};\n\n    if (typeof options === 'string') {\n      this.name = options;\n      options = {};\n    } else {\n      this.name = options.name;\n      if (options.section) {\n        this.section = options.section;\n      }\n    }\n\n    this.parseHyperCubeLayout(options);\n\n    this.options = options;\n  }\n\n  validateHyperCubeLayout(hyperCubeLayout) {\n    if (!hyperCubeLayout) { throw new Error('Hyper cube layout is undefined'); }\n    if (!hyperCubeLayout.qDimensionInfo) { throw new Error('qDimensionInfo is undefined'); }\n    if (!hyperCubeLayout.qMeasureInfo) { throw new Error('qMeasureInfo is undefined'); }\n    if (hyperCubeLayout.qMode === 'P') { throw new Error('Cannot add hyper cube in pivot mode, qMode:P(DATA_MODE_PIVOT) is not supported'); }\n    if (hyperCubeLayout.qMode === 'K') { throw new Error('Cannot add hyper cube in stacked mode, qMode:K(DATA_MODE_PIVOT_STACK) is not supported'); }\n    if (hyperCubeLayout.qMode === 'S') {\n      this.validateDataPages(hyperCubeLayout.qDataPages);\n      this.validateDataPagesCoverage(hyperCubeLayout.qDataPages, hyperCubeLayout);\n      return hyperCubeLayout;\n    }\n    throw new Error('HyperCubeLayout is not valid');\n  }\n\n  validateDataPages(dataPages) {\n    if (!dataPages) {\n      throw new Error('qDataPages are undefined');\n    }\n\n    if (dataPages[0].qArea && dataPages[0].qArea.qTop > 0) {\n      throw new Error('qDataPages first page should start at qTop: 0.');\n    }\n  }\n\n  validateDataPagesCoverage(dataPages, hyperCubeLayout) {\n    let qHeight = 0;\n\n    dataPages.forEach((dataPage) => {\n      this.validateQMatrix(dataPage);\n      this.validateQArea(dataPage, hyperCubeLayout, qHeight);\n      qHeight += dataPage.qArea.qHeight;\n    }, this);\n\n    if (hyperCubeLayout.qSize.qcy !== qHeight) {\n      throw new Error('qDataPages are missing pages.');\n    }\n  }\n\n  validateQMatrix(dataPage) {\n    if (!dataPage.qMatrix) {\n      throw new Error('qMatrix of qDataPages are undefined');\n    }\n    if (dataPage.qMatrix.length === 0) {\n      throw new Error('qDataPages are empty');\n    }\n  }\n\n  validateQArea(dataPage, hyperCubeLayout, qHeight) {\n    if (!dataPage.qArea) {\n      throw new Error('qArea of qDataPages are undefined');\n    }\n    if (dataPage.qArea.qLeft > 0) {\n      throw new Error('qDataPages have data pages that\\'s not of full qWidth.');\n    }\n    if (dataPage.qArea.qWidth < hyperCubeLayout.qSize.qcx) {\n      throw new Error('qDataPages have data pages that\\'s not of full qWidth.');\n    }\n    if (dataPage.qArea.qTop < qHeight) {\n      throw new Error('qDataPages have overlapping data pages.');\n    }\n    if (dataPage.qArea.qTop > qHeight) {\n      throw new Error('qDataPages are missing pages.');\n    }\n  }\n\n  parseHyperCubeLayout() {\n    const that = this;\n    that.fields = that.getFieldsFromHyperCubeLayout();\n    that.data = that.getDataFromHyperCubeLayout();\n    const inlineData = `${that.fields\n      .map(field => field.name)\n      .join(',')}\\n${this.data}`;\n    let hasDual = false;\n    that.fields.forEach((field) => {\n      if (field.isDual) {\n        hasDual = true;\n        that.items.push(that.getMapTableForDualField(field));\n      }\n    });\n    const options = {\n      name: that.name,\n      fields: that.getFieldsDefinition(that.fields),\n    };\n    if (that.section && !hasDual) {\n      options.section = that.section;\n    }\n    that.items.push(new Table(inlineData, options));\n  }\n\n  getFieldsDefinition(fields) {\n    return fields.map((field) => {\n      const mappedField = { name: field.name };\n      if (validFieldType(field.dimensionType)) {\n        mappedField.type = field.dimensionType;\n        mappedField.displayFormat = field.displayFormat;\n      }\n      if (field.isDual) {\n        mappedField.expr = `Dual(ApplyMap('MapDual__${field.name}', ${field.name}), ${field.name})`;\n      } else {\n        mappedField.src = field.name;\n      }\n      return mappedField;\n    });\n  }\n  mapDualFieldQMatrix(qMatrix, field) {\n    function uniqueFilter(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n    return qMatrix\n      .map(row => HyperCubeUtils.getDualDataRow(row[field.index]))\n      .filter(uniqueFilter);\n  }\n  getMapTableForDualField(field) {\n    const that = this;\n    const concatQMatrix = that.hyperCubeLayout.qDataPages.reduce(\n      (prev, curr) => [...prev, ...curr.qMatrix],\n      []\n    );\n    const data = that.mapDualFieldQMatrix(concatQMatrix, field);\n    const headers = HyperCubeUtils.getDualHeadersForField(field);\n    const inlineData = `${headers}\\n${data.join('\\n')}`;\n    const name = `MapDual__${field.name}`;\n    const options = { name, prefix: 'Mapping' };\n    if (this.section && this.items.length === 0) {\n      options.section = this.section;\n    }\n    return new Table(inlineData, options);\n  }\n  getDataFromHyperCubeLayout() {\n    const that = this;\n    const data = that.hyperCubeLayout.qDataPages\n      .map(dataPage =>\n        dataPage.qMatrix\n          .map(row =>\n            row\n              .map((cell, index) => {\n                const field = that.fields[index];\n                if (!field.isDual && HyperCubeUtils.isCellDual(cell, field)) {\n                  field.isDual = true;\n                }\n                return HyperCubeUtils.getCellValue(cell, field);\n              })\n              .join(',')\n          )\n          .join('\\n')\n      )\n      .join('\\n');\n    return data;\n  }\n  getFieldsFromHyperCubeLayout() {\n    const that = this;\n    const fields = [];\n    for (let i = 0; i < that.hyperCubeLayout.qDimensionInfo.length; i += 1) {\n      fields.push({\n        type: 'dimension',\n        dimensionType: HyperCubeUtils.getDimensionType(\n          that.hyperCubeLayout.qDimensionInfo[i]\n        ),\n        name: that.hyperCubeLayout.qDimensionInfo[i].qFallbackTitle,\n        displayFormat: that.hyperCubeLayout.qDimensionInfo[i].qNumFormat.qFmt,\n        index: i,\n      });\n    }\n    for (let j = 0; j < that.hyperCubeLayout.qMeasureInfo.length; j += 1) {\n      fields.push({\n        type: 'measure',\n        name: that.hyperCubeLayout.qMeasureInfo[j].qFallbackTitle,\n        index: that.hyperCubeLayout.qDimensionInfo.length + j,\n      });\n    }\n    return fields;\n  }\n  getItems() {\n    return this.items;\n  }\n}\n\nexport default HyperCube;\n\n\n\n// WEBPACK FOOTER //\n// ./src/hyper-cube.js","import hyperCubeSpecification from './hyper-cube-specification';\n\nconst DEFAULT_DELIMITER = ',';\n\nfunction isDimensionTypeMixed(dimension) {\n  return (\n    dimension.qDimensionType === hyperCubeSpecification.qDimensionType.numeric &&\n    dimension.qTags.length === 0\n  );\n}\n\nfunction isDimensionTypeText(dimension) {\n  return dimension.qDimensionType === hyperCubeSpecification.qDimensionType.text;\n}\n\nfunction isDimensionTypeTimestamp(dimension) {\n  if (dimension.qDimensionType === hyperCubeSpecification.qDimensionType.timestamp) {\n    return true;\n  }\n  if (\n    dimension.qDimensionType === hyperCubeSpecification.qDimensionType.numeric &&\n    dimension.qNumFormat.qType === hyperCubeSpecification.qTypes.timestamp\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDimensionTypeDate(dimension) {\n  if (\n    dimension.qDimensionType === hyperCubeSpecification.qDimensionType.numeric &&\n    dimension.qNumFormat.qType === hyperCubeSpecification.qTypes.date\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDimensionTypeTime(dimension) {\n  if (\n    dimension.qDimensionType === hyperCubeSpecification.qDimensionType.numeric &&\n    dimension.qNumFormat.qType === hyperCubeSpecification.qTypes.time\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDimensionTypeInterval(dimension) {\n  if (\n    dimension.qDimensionType === hyperCubeSpecification.qDimensionType.numeric &&\n    dimension.qNumFormat.qType === hyperCubeSpecification.qTypes.interval\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function getDimensionType(dimension) {\n  if (isDimensionTypeText(dimension)) {\n    return 'text';\n  }\n  if (isDimensionTypeMixed(dimension)) {\n    return 'mixed';\n  }\n  if (isDimensionTypeTimestamp(dimension)) {\n    return 'timestamp';\n  }\n  if (isDimensionTypeTime(dimension)) {\n    return 'time';\n  }\n  if (isDimensionTypeDate(dimension)) {\n    return 'date';\n  }\n  if (isDimensionTypeInterval(dimension)) {\n    return 'interval';\n  }\n  return 'num';\n}\nfunction isNumericDimensionType(dimensionType) {\n  const numericDimensionTypes = [\n    'timestamp',\n    'interval',\n    'time',\n    'date',\n    'num',\n  ];\n  dimensionType = dimensionType || '';\n  return numericDimensionTypes.indexOf(dimensionType.toLowerCase()) > -1;\n}\nfunction storeNumeric(field) {\n  if (field.type === 'measure') {\n    return true;\n  }\n  if (\n    field.type === 'dimension' && isNumericDimensionType(field.dimensionType)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkIfFieldIsDual(field) {\n  return field.type === 'dimension' && field.dimensionType === 'num';\n}\n\nexport function isCellDual(cell, field) {\n  return checkIfFieldIsDual(field) && cell.qText !== Number(cell.qNum).toString();\n}\n\nfunction escapeStringContainingDelimiter(string, delimiter) {\n  if (string.indexOf(delimiter) > -1 || string.indexOf('\\n') > -1) {\n    return `'${string.replace(/'/g, \"''\").replace(/\\n/g, ' ')}'`;\n  }\n  return string;\n}\n\nfunction getNumericCellValue(cell) {\n  return cell.qNum;\n}\n\nfunction getTextCellValue(cell) {\n  return escapeStringContainingDelimiter(cell.qText, DEFAULT_DELIMITER);\n}\n\nexport function getCellValue(cell, field) {\n  if (storeNumeric(field)) {\n    return getNumericCellValue(cell);\n  }\n  return getTextCellValue(cell);\n}\n\nexport function getDualDataRow(cell) {\n  return `${cell.qNum}${DEFAULT_DELIMITER}${escapeStringContainingDelimiter(cell.qText, DEFAULT_DELIMITER)}`;\n}\n\nexport function getDualHeadersForField(field) {\n  return `${field.name}${DEFAULT_DELIMITER}${field.name}_qText}`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/hyper-cube-utils.js","const qTypes = {\n  timestamp: 'TS',\n  date: 'D',\n  time: 'T',\n  interval: 'IV',\n};\n\nconst qDimensionType = {\n  timestamp: 'T',\n  text: 'D',\n  numeric: 'N',\n};\n\nexport default {\n  qTypes,\n  qDimensionType,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/hyper-cube-specification.js","class SetStatement {\n  constructor(defaultSetStatements) {\n    this.defaultSetStatements = defaultSetStatements;\n  }\n\n  getScript() {\n    return Object.keys(this.defaultSetStatements)\n      .map(key => `SET ${key}='${Array.isArray(this.defaultSetStatements[key]) ? this.defaultSetStatements[key].join(';') : this.defaultSetStatements[key]}';`)\n      .join('\\n');\n  }\n\n  getName() {\n    return '';\n  }\n}\n\nexport default SetStatement;\n\n\n\n// WEBPACK FOOTER //\n// ./src/set-statement.js","import DerivedFieldTemplate from './derived-fields-template';\n\nconst derivedFieldsDefinition = `Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),\n  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),\n  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),\n  Month($1) AS [Month] Tagged ('$month', '$cyclic'),\n  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),\n  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),\n  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),\n  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),\n  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),\n  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,\nYear(Today())-Year($1) AS [YearsAgo] ,\n  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,\n4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,\nCeil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,\n  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,\n12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,\nMonth(Today())-Month($1) AS [MonthRelNo] ,\n  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,\n(WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,\nWeek(Today())-Week($1) AS [WeekRelNo];`;\n\nfunction getCalenderDerivedFieldDefinition(fn) {\n  return new DerivedFieldTemplate({\n    name: 'autoCalendar',\n    fieldTag: 'date',\n    derivedFieldDefinition: derivedFieldsDefinition,\n    fieldMatchFunction: () => fn(f => f.calendarTemplate),\n  });\n}\n\nexport default getCalenderDerivedFieldDefinition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/calendar-derived-fields.js","import { getFieldName, escapeText } from './utils/utils';\n\nclass DerivedFieldsTemplate {\n  constructor(options) {\n    this.getFieldFn = options.fieldMatchFunction;\n    this.name = options.name;\n    this.fieldTag = options.fieldTag;\n    this.derivedFieldDefinition = options.derivedFieldDefinition;\n  }\n\n  getScript() {\n    const fields = this.getFieldFn() || [];\n\n    if (fields.length > 0) {\n      return this.getDefinition(fields.map(getFieldName));\n    }\n\n    return undefined;\n  }\n\n  getDefinition(fieldNames) {\n    return `\"${escapeText(this.name)}\":\nDECLARE FIELD DEFINITION Tagged ('$${this.fieldTag}')\nFIELDS\n${this.derivedFieldDefinition}\nDERIVE FIELDS FROM FIELDS [${fieldNames.join(', ')}] USING \"${escapeText(this.name)}\";`;\n  }\n}\n\nexport default DerivedFieldsTemplate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/derived-fields-template.js"],"sourceRoot":""}